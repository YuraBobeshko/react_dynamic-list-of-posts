{"version":3,"sources":["Content.js","load.js","loadConnect.js","List.js","App.js","index.js"],"names":["Content","props","list","posts","isLoaded","react_default","a","createElement","value","filter","post","user","name","includes","map","comments","className","key","id","title","email","address","city","street","body","comment","_callee","url","response","items","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","load","commentsUrl","postsUrl","usersUrl","users","_objectSpread","find","userId","postId","loadConnect","List","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loads","bind","assertThisInitialized","filterName","setState","event","target","_this2","Fragment","type","onChange","hidden","onClick","src_Content","React","Component","App","src_List","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef6c7bd7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Content(props) {\n  const list = props.list;\n  let posts = props.list.posts;\n\n  if(list.isLoaded && posts === null) {\n    return <p>...loading</p>\n  } else if (!list.isLoaded && posts === null) {\n    return <p>not loaded</p>\n  } else if (list.isLoaded && posts !== null) {\n    if(props.list.value !== '') {\n      posts = posts.filter(post => post.user.name.includes(props.list.value))\n    }\n    return posts.map(post => {\n      const user = post.user;\n      const comments = post.comments;\n      return (\n          <div className={'content'} key={post.id + post.title}>\n            <div>\n              <p>Name: {user.name}</p>\n              <p>email: {user.email}</p>\n              <p>address: {user.address.city} {user.address.street}</p>\n            </div>\n            <div>\n            <p>{post.title}</p>\n            <p>{post.body}</p>\n            </div>\n            <div>\n              <ul>\n                {comments.map(comment => <li key={comment.id + comment.body}>{comment.body}</li>)}\n              </ul>\n            </div>\n          </div>\n        )\n      })\n  }\n}\n\nexport default Content;\n","\nasync function load (url) {\n  const response = await fetch(url);\n  const items = await response.json();\n  return items;\n}\n\nexport default load;\n","import load from './load';\n\nasync function loadConnect(commentsUrl, postsUrl, usersUrl) {\n  const comments = await load(commentsUrl);\n  const posts = await load(postsUrl);\n  const users = await load(usersUrl);\n  return posts.map(post =>{\n    return {\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => post.id === comment.postId),\n    }\n  })\n}\n\nexport default loadConnect;\n","import React from 'react';\n\nimport Content from './Content';\nimport loadConnect from './loadConnect';\n\nclass List extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      posts: null,\n      isLoaded: false,\n      value: '',\n    };\n\n    this.loads = this.loads.bind(this);\n    this.filterName = this.filterName.bind(this);\n  }\n\n  async loads() {\n    this.setState({\n      isLoaded: true\n    });\n    let posts = await loadConnect('https://jsonplaceholder.typicode.com/comments',\n      'https://jsonplaceholder.typicode.com/posts',\n      'https://jsonplaceholder.typicode.com/users');\n    this.setState({\n      posts,\n    });\n  }\n\n  filterName (event) {\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    const { value } = this.state;\n    return (\n      <>\n        <input\n          type={\"text\"}\n          value={value}\n          onChange={this.filterName}\n          hidden={this.state.posts === null}\n        ></input>\n        <button hidden={this.state.isLoaded} onClick={() => this.loads()}>\n          Load\n        </button>\n        <Content list={this.state} />\n      </>\n    );\n  }\n}\n\nexport default List;\n","import React from 'react';\nimport './App.css';\n\nimport List from './List';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}